plugins {
    id 'java'
}
dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar'])
	implementation project(":wa-migration-core")
	implementation project(":wa-migration-impl")
	implementation project(":wa-migration-runtime")
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.2.1'
	implementation group: 'org.yaml', name: 'snakeyaml', version: '1.30'
	
	implementation 		  	'org.projectlombok:lombok:1.18.16'
	annotationProcessor 	'org.projectlombok:lombok:1.18.16'
	testImplementation 		'org.projectlombok:lombok:1.18.16'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'


	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
	implementation group: 'org.codehaus.janino', name: 'janino', version: '3.0.8'
	implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

	
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.2'
	testRuntimeOnly  group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.2'	
	testRuntimeOnly  group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.8.2'
	testCompileOnly  group: 'junit', name: 'junit', version: '4.13.2'
}
allprojects {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	compileJava.options.encoding = 'UTF-8'
	project.ext.main_ver  = 1.3
	repositories {
		mavenCentral()
	}
}

subprojects{
	apply plugin : 'java'
	task make_project {
		println "make_project : " + project
	    sourceSets*.java.srcDirs*.each {
	        rootProject.make_dir(it);
	    }
	    sourceSets*.resources.srcDirs*.each {
	       rootProject.make_dir(it);
	    }
	}	
}
def make_dir(file){
	if( !file.exists() ) {
        file.mkdirs()
    }
}
jar {
	archiveName="wa_mig_"+project.ext.main_ver+ ".jar"
}
tasks.register('release-'+project.name){
	dependsOn
	def path = "./release/"+project.name;
	doLast(){
		copy{
			from ("$project.buildDir"+"/libs")
			into path
		}	
	}
}